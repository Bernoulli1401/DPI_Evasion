#########################################################################
#              BERNOULLI                                                #
#      Secure WireGuard VPN Setup                                       #
#-----------------------------------------------------------------------#
#  Tunnel all traffic over port 443 using                               #
#  TLS 1.3 with WireGuard on Android                                    #
#-----------------------------------------------------------------------#
#           By:                                                         #

# ██████╗░███████╗██████╗░███╗░░██╗░█████╗░██╗░░░██╗██╗░░░░░██╗░░░░░██╗ #
# ██╔══██╗██╔════╝██╔══██╗████╗░██║██╔══██╗██║░░░██║██║░░░░░██║░░░░░██║ #
# ██████╦╝█████╗░░██████╔╝██╔██╗██║██║░░██║██║░░░██║██║░░░░░██║░░░░░██║ #
# ██╔══██╗██╔══╝░░██╔══██╗██║╚████║██║░░██║██║░░░██║██║░░░░░██║░░░░░██║ #
# ██████╦╝███████╗██║░░██║██║░╚███║╚█████╔╝╚██████╔╝███████╗███████╗██║ #
# ╚═════╝░╚══════╝╚═╝░░╚═╝╚═╝░░╚══╝░╚════╝░░╚═════╝░╚══════╝╚══════╝╚═╝ #
#######################################################################

---

# 1. REQUISITOS
# --------------
# - VPS con Linux
# - Dominio
# - Cliente Android con WireGuard
# - Acceso root al servidor

---

# 2. CONFIGURACIÓN DEL SERVIDOR (VPS)
# -----------------------------------

## 2.1. Acceder al servidor VPS
ssh root@<IP_DEL_VPS>

## 2.2. Actualizar paquetes
sudo apt update && sudo apt upgrade -y

## 2.3. Instalar WireGuard
sudo apt install wireguard -y

## 2.4. Generar claves para WireGuard
mkdir -p /etc/wireguard && cd /etc/wireguard
wg genkey | tee server_private.key | wg pubkey > server_public.key

## 2.5. Crear la configuración del servidor
sudo nano /etc/wireguard/wg0.conf

# Agregar lo siguiente:
[Interface]
PrivateKey = <SERVIDOR_PRIVATE_KEY>
Address = 10.0.0.1/24
ListenPort = 443
SaveConfig = true
PostUp = iptables -A FORWARD -i wg0 -j ACCEPT
PostDown = iptables -D FORWARD -i wg0 -j ACCEPT

[Peer]
PublicKey = <CLIENTE_PUBLIC_KEY>
AllowedIPs = 10.0.0.2/32

## 2.6. Habilitar y ejecutar WireGuard
sudo systemctl enable wg-quick@wg0
sudo systemctl start wg-quick@wg0

---

# 3. CONFIGURAR TLS 1.3 CON NGINX
# --------------------------------

## 3.1. Instalar Nginx
sudo apt install nginx -y

## 3.2. Configurar Nginx para Proxy Seguro
sudo nano /etc/nginx/sites-available/wireguard

# Agregar lo siguiente:
server {
    listen 443 ssl;
    server_name tu_dominio.com;
    ssl_protocols TLSv1.3;
    ssl_ciphers TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256;
    ssl_certificate /etc/nginx/ssl/tls.crt;
    ssl_certificate_key /etc/nginx/ssl/tls.key;
    location / {
        proxy_pass http://127.0.0.1:51820;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

## 3.3. Habilitar configuración y reiniciar Nginx
sudo ln -s /etc/nginx/sites-available/wireguard /etc/nginx/sites-enabled/
sudo systemctl restart nginx

---

# 4. CONFIGURACIÓN DEL CLIENTE (ANDROID)
# --------------------------------------

## 4.1. Generar claves del cliente
wg genkey | tee client_private.key | wg pubkey > client_public.key

## 4.2. Crear configuración del cliente
nano client.conf

# Agregar lo siguiente:
[Interface]
PrivateKey = <CLIENT_PRIVATE_KEY>
Address = 10.0.0.2/32

[Peer]
PublicKey = <SERVER_PUBLIC_KEY>
Endpoint = tu_dominio.com:443
AllowedIPs = 0.0.0.0/0
PersistentKeepalive = 25

## 4.3. Agregar el cliente al servidor
Editar `/etc/wireguard/wg0.conf` y agregar:

[Peer]
PublicKey = <CLIENTE_PUBLIC_KEY>
AllowedIPs = 10.0.0.2/32

## 4.4. Reiniciar WireGuard para aplicar cambios
sudo systemctl restart wg-quick@wg0

## 4.5. Importar Configuración en Android
1. Transferir `client.conf` al dispositivo.
2. Abrir la app **WireGuard**.
3. Presionar **"+" > Importar desde archivo**.
4. Seleccionar `client.conf`.
5. Activar la conexión.

---

# 5. SEGURIDAD Y OPTIMIZACIÓN
# ---------------------------

## 5.1. Habilitar Firewall
sudo ufw allow 443/tcp
sudo ufw enable

## 5.2. Instalar Fail2Ban para proteger el servidor
sudo apt install fail2ban -y

---

# 6. VERIFICACIÓN FINAL
# ----------------------

## 6.1. Comprobar conexión
Abrir [https://ipleak.net](https://ipleak.net) y verificar si la IP pública ha cambiado.

## 6.2. Verificar estado de WireGuard
sudo wg show

## 6.3. Asegurar que WireGuard arranque automáticamente
sudo systemctl enable wg-quick@wg0

---

# CONCLUSIÓN
# ----------
Con este procedimiento, el tráfico del cliente pasará por WireGuard a través del puerto **443** con **TLS 1.3**, 
garantizando seguridad, privacidad y evitando restricciones de red.

# SOPORTE
# -------
- Documentación Oficial: https://www.wireguard.com/
- Nginx + TLS: https://nginx.org/
- Ubuntu Server: https://ubuntu.com/server

# AUTOR: BERNOULLI
###############################################
-------------------------------------------------------------------------------

###########################################################################
#                     BERNOULLI - CONFIGURACIÓN VPN TLS 1.3              #
#                     EVASIÓN DE DPI Y FIREWALLS (ACTUALIZADO: 2025-02-02) #
###########################################################################

## DESCRIPCIÓN
Este instructivo detalla cómo configurar una VPN de alta privacidad y evasión de bloqueos
usando **WireGuard** sobre **TLS 1.3**, encapsulado con **HAProxy**, y con un backup mediante **Shadowsocks**.

###########################################################################
#                          REQUISITOS NECESARIOS                          #
###########################################################################

1. **Servidor VPS** (Ubuntu 20.04+ recomendado)
2. **Dominio con certificado SSL (Let's Encrypt)**
3. **WireGuard** (VPN principal)
4. **HAProxy** (Encapsulación en TLS 1.3)
5. **Shadowsocks** (Backup en caso de bloqueo extremo)
6. **WireGuard & Shadowsocks para Android**

###########################################################################
#                          CONFIGURACIÓN DEL VPS                          #
###########################################################################

### 1. INSTALAR WIREGUARD
```bash
sudo apt update && sudo apt install wireguard -y
```
Generar claves:
```bash
wg genkey | tee server_private.key | wg pubkey > server_public.key
```
Configurar WireGuard (`/etc/wireguard/wg0.conf`):
```ini
[Interface]
PrivateKey = <SERVIDOR_PRIVATE_KEY>
Address = 10.0.0.1/24
ListenPort = 51820
SaveConfig = true
PostUp = iptables -A FORWARD -i wg0 -j ACCEPT
PostDown = iptables -D FORWARD -i wg0 -j ACCEPT

[Peer]
PublicKey = <CLIENTE_PUBLIC_KEY>
AllowedIPs = 10.0.0.2/32
```
Activar WireGuard:
```bash
sudo systemctl enable wg-quick@wg0
sudo systemctl start wg-quick@wg0
```

###########################################################################
### 2. OFUSCAR WIREGUARD CON HAPROXY (TLS 1.3)                             #
###########################################################################

1. Instalar HAProxy:
```bash
sudo apt install haproxy -y
```
2. Configurar `/etc/haproxy/haproxy.cfg`:
```ini
frontend wg_tls
    bind *:443 ssl crt /etc/letsencrypt/live/tu_dominio.com/fullchain.pem alpn h2,http/1.1
    mode tcp
    default_backend wg_server

backend wg_server
    mode tcp
    server wireguard 127.0.0.1:51820
```
3. Reiniciar HAProxy:
```bash
sudo systemctl restart haproxy
```

###########################################################################
### 3. INSTALAR Y CONFIGURAR SHADOWSOCKS (BACKUP)                         #
###########################################################################

1. Instalar Shadowsocks:
```bash
sudo apt install shadowsocks-libev -y
```
2. Configurar `/etc/shadowsocks-libev/config.json`:
```json
{
    "server": "0.0.0.0",
    "server_port": 8388,
    "password": "tu_clave",
    "method": "aes-256-gcm",
    "mode": "tcp_and_udp"
}
```
3. Iniciar Shadowsocks:
```bash
sudo systemctl enable shadowsocks-libev
sudo systemctl start shadowsocks-libev
```

###########################################################################
#                  CONFIGURACIÓN CLIENTE (ANDROID)                        #
###########################################################################

### A. CONFIGURAR WIREGUARD EN ANDROID
1. Generar clave cliente:
```bash
wg genkey | tee client_private.key | wg pubkey > client_public.key
```
2. Crear `client.conf`:
```ini
[Interface]
PrivateKey = <CLIENT_PRIVATE_KEY>
Address = 10.0.0.2/32

[Peer]
PublicKey = <SERVER_PUBLIC_KEY>
Endpoint = tu_dominio.com:443
AllowedIPs = 0.0.0.0/0
PersistentKeepalive = 25
```
3. Importar en **WireGuard App**.

### B. CONFIGURAR SHADOWSOCKS EN ANDROID
1. Descargar **Shadowsocks** en Play Store.
2. Agregar servidor con:
   - **IP**: `tu_vps`
   - **Puerto**: `8388`
   - **Método**: `aes-256-gcm`
   - **Contraseña**: `tu_clave`
3. Activar **Proxy local** en la app.

###########################################################################
#                        CONCLUSIÓN Y RECOMENDACIONES                     #
###########################################################################

- **WireGuard + HAProxy (TLS 1.3)** → VPN rápida y segura sin detección.
- **Shadowsocks (Backup)** → Se activa si WireGuard es bloqueado.
- **TCP solo cuando sea necesario** → Para evitar latencias.
- **DNS Seguro (Google, Cloudflare)** → Configurar `8.8.8.8` y `1.1.1.1`.

💡 **Opcional:** Si el bloqueo es extremo, agregar **V2Ray WebSocket TLS**.

###########################################################################
#                           FIRMADO POR: BERNOULLI                         #
###########################################################################

